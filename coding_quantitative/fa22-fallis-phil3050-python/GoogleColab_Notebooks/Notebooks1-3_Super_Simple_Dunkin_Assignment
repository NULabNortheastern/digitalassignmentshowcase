{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Notebooks1-3_Super_Simple_Dunkin_Assignment","provenance":[{"file_id":"13LgqyEABL9unIFAcnCaSwb4MmM9PBdXz","timestamp":1658770422152},{"file_id":"1dEYcnKJ1ACNMY5vFTf1bvMPK1b91mbcy","timestamp":1644080060617},{"file_id":"1JRR_peIQo9o-3-8jJJvZUqz_2pMESfV_","timestamp":1642788172634},{"file_id":"1H-VHimsBrSanlZ75gVWIdM8Voslol2Bf","timestamp":1642773311069}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Super Simple Dunkin Donuts Coffee Assignment**\n","\n","Dunkin Donuts sells several different *types* and *sizes* of coffee products. \n","\n","Each product will be specified by both a type and a size.  So, any particular product can be represented by a “tuple” with a size and type value in it, such as ('Small Cappuccino') or ('Large Iced Coffee').\n","\n","*Quick Definition!* A \"tuple\" is a data type in Python; you can just think of a tuple as a list of data for now. \n","\n","We will represent the coffee menu with a Python dictionary.  This dictionary holds the prices of the different types and sizes of coffee products.  Note that this dictionary is a shortened version of the full Dunkin menu.\n","\n","This assignment requires you to initialize variables and fill in a few functions. The functions can be used to calculate and print price information from the dictionary. \n","\n","Below, you'll find some starter code and associated prompts.\n","\n","Each function has an associated \"test\" for you written below it. When you run your function, these tests will automatically run your function and display your function's output.\n","\n","We have also provided you with the expected answer, so you can check for yourself if you have written functions that produce the expected answers! All you have to do is run the code block, and compare the printed values your functions produced with the expected values. The values we have provided as expected values are rounded, but we do not expect your functions to round numbers.\n","\n","The values will be printed as numbers, not as dollars - this is to be expected!\n","\n","## Turning in the Assignment\n","\n","This assignment is due <b>TTBD</b>.  I am giving it two weeks just to make sure that we have plenty of time to iron out any difficulties.  But please try to get started as soon as you can.\n","\n","When you think that you have your code working, download it as a .py file and submit it to GradeScope.  If you do not get full credit, you can revise your code and resubmit it to GradeScope as many times as you like before the due date.\n","\n","If you have questions about getting your Python code to work, there are at least three options:\n","\n","- Make an appointment with the DITI fellows at NULab.  Go to https://calendly.com/diti-nu\n","- Contact the TA Mac at dleeuwen.m@northeastern.edu\n","- Contact the instructor Don at d.fallis@northeastern.edu\n","\n","By the way, if you have questions about specifically about using GradeScope, your best bet is to contact Mac."],"metadata":{"id":"cgDEsiqQ6yU8"}},{"cell_type":"code","source":["dunkin_menu = {'Small Coffee': 1.69, 'Medium Coffee': 2.09, 'Large Coffee': 2.39, \\\n","               'Small Latte': 2.79, 'Medium Latte': 3.09, 'Large Latte': 3.79, \\\n","               'Small Cappuccino': 2.69, 'Medium Cappuccino': 2.99, 'Large Cappuccino': 3.69}"],"metadata":{"id":"kJxlrZTP8-P_"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["The above dunkin_menu variable is a **global variable** meaning that it will be accessible throughout the code blocks below. You will use the dunkin_menu to retrieve and calculate price information in the following exercises.\n","\n","Exercise 1:\n","\n","You will see the expression below uses a **local variable** called price. This variable is assigned the value of the price of a small coffee in the dunkin_menu. The print function  is used to print the cost of a small coffee in the dunkin_menu. It will not in any way modify any existing values or variables.\n","\n","You will fill in the body of a generalized function to retrieve the price of any specified product in the dunkin_menu.\n","\n","Input\n","    \n","- price: A local variable initialized to show the cost of a product in the dunkin_menu.\n","    \n","- get_price: A defined function to retrieve price information of a specified product from the menu. \n","\n","- menu:  A local variable that specifies the data container where products are listed. The function retrieves the price of a specified product from this data container.\n","\n","- product: The name of a product in the dunkin_menu. For example, 'Small Coffee'.\n","                \n","Output\n","    \n","- return: A python statement to return the price information of any specified product in the dunkin_menu. "],"metadata":{"id":"lZZjsdZL-vdF"}},{"cell_type":"code","source":["price = dunkin_menu['Small Coffee']\n","print(\"The price of a small coffee is\", price)\n","\n","def get_price(menu, product):\n","  # -------------------------------------------------------------------------\n","    # YOUR CODE GOES HERE\n","    \n","    price = menu[product]       \n","    #\n","    # END OF YOUR CODE\n","    # -------------------------------------------------------------------------    \n","    return price\n","\n","print(\"What is the price of a medium latte?\")\n","ml_price = get_price(dunkin_menu, 'Medium Latte')\n","print(\"Your answer:\", ml_price)\n","print(\"Expected result: 3.09\")\n","print(\"\")"],"metadata":{"id":"vXE8iUPLC5N9"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["\n","Exercise 2: \n","\n","For this exercise, you will fill in the body of a generalized function that triples the price of any specified product in the dunkin_menu and prints the total cost of buying three of the specified products. \n","\n","First, we will define a local variable called sc_price, to retrieve the price of a small coffee from the dunkin_menu. Then, we use the print function to print the cost of three, small coffees. \n","\n","Input\n","    \n","- sc_price: A local variable to retrieve the cost of a small coffee in the dunkin_menu.\n","\n","- triple_price(): A defined function that calculates and prints the cost of buying three of the same product from the dunkin_menu.\n","\n","- price: A local variable that represents the price of a specific product in the dunkin_menu.\n","    \n","- result: An expression to calculate the cost of buying three of the specified products.\n","  \n","\n","Output\n","\n","*   return: A statement to return the value of the triple_price function.\n","\n"],"metadata":{"id":"6bmkUU4m-si1"}},{"cell_type":"code","source":["sc_price = get_price(dunkin_menu, 'Small Coffee')\n","print(\"The price of three small coffees is\", sc_price * 3)\n","\n","def triple_price(price):\n","\n","  # -------------------------------------------------------------------------\n","    # YOUR CODE GOES HERE\n","      \n","    result = price * 3\n","    \n","       \n","    #\n","    # END OF YOUR CODE\n","    # -------------------------------------------------------------------------    \n","    return result\n","\n","print(\"What is the price of three medium lattes?\")\n","ml_price = get_price(dunkin_menu, 'Medium Latte')\n","ml_result = triple_price(ml_price)\n","print(\"Your answer:\", ml_result)\n","print(\"Expected result: 9.27\")\n","print(\"\")\n"],"metadata":{"id":"Q-Iq8TB6DcLq"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Exercise 3:\n","\n","For this exercise, you will fill in the body of the generalized calculate_price function to calculate the cost of a product in the dunkin_menu when it the product's price multipled by any specified value.\n","\n","Input:\n","\n","*   calculate_price(): A function to calculate the price of a product on the dunkin_menu when multiplied by a specific value. \n","\n","- price: A local variable that represents the cost of a specific product in the dunkin_menu.\n","\n","*  multiplier: The factor used to multiply the price.\n","\n","- result: An expression to calculate the cost of buying multiple of the specified product.\n","\n","Output: \n","\n","*   return: A statement to return the value of the calculate_price function.\n"],"metadata":{"id":"Re-5xDtEtiis"}},{"cell_type":"code","source":["def calculate_price(price, multiplier):\n","# -------------------------------------------------------------------------\n","    # YOUR CODE GOES HERE\n","    \n","     result = price * multiplier\n","    \n","    \n","    #\n","    # END OF YOUR CODE\n","    # -------------------------------------------------------------------------    \n","    \n","     return result\n","\n","print(\"What is the price of five medium lattes?\")\n","ml_price = get_price(dunkin_menu, 'Medium Latte')\n","ml_result = calculate_price(ml_price, 5)\n","print(\"Your answer:\", ml_result)\n","print(\"Expected result: 15.45\")\n","print(\"\")"],"metadata":{"id":"6cX5ej8zvoV8"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Exercise 4:\n","\n","For this exercise, you will fill in the body of the print_menu_items function to print the prices of every product in the dunkin_menu. \n","\n","You will initialize an **iteration variable**, called \"item\", to set the print function to print the price associated with each menu item in the dunkin_menu.\n","\n","Input\n","\n","- print_menu_items(): A function that iterates through each product in the menu and prints the prices.\n","\n","*   for: A statement that loops through a set of data and executes a code on each iteration variable in the data container.\n","\n","- item: An iteration variable that represents the values of a product in the menu. \n","\n","- menu:  A local variable that specifies the data container where products are listed. The function retrieves the prices of all products from this data container.\n","         \n","Output\n","    \n","-print(): A function to print the value associated with each item in the dunkin_menu."],"metadata":{"id":"MsQQLDer_TUn"}},{"cell_type":"code","source":["def print_menu_items(menu):\n","   \n"," # -------------------------------------------------------------------------\n","    # YOUR CODE GOES HERE\n","  for item in menu:\n","    print(menu[item])\n","\n","    \n","    #\n","    # END OF YOUR CODE\n","    # -------------------------------------------------------------------------    \n","print_menu_items(dunkin_menu)\n","\n","print(\"What are the range of costs of items in the dunkin_menu?\")\n","print(\"Your answer: \", \"for item in menu:, print(menu[item])\")\n","print(\"Expected result: 1.69, 2.09, 2.39, 2.79, 3.09, 3.79, 2.69, 2.99, 3.69\")"],"metadata":{"id":"k2ycyY3_DhhX"},"execution_count":null,"outputs":[]}]}